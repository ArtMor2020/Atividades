// <auto-generated />
using Campeonato.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Campeonato.Migrations
{
    [DbContext(typeof(CampeonatoContext))]
    partial class CampeonatoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Campeonato.Models.Equipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__equipe__3213E83F5774D61B");

                    b.ToTable("equipe", (string)null);
                });

            modelBuilder.Entity("Campeonato.Models.EquipeEmPartidum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEquipe")
                        .HasColumnType("int")
                        .HasColumnName("idEquipe");

                    b.Property<int>("IdPartidaEquipe")
                        .HasColumnType("int")
                        .HasColumnName("idPartidaEquipe");

                    b.HasKey("Id")
                        .HasName("PK__equipeEm__3213E83F0E9F375F");

                    b.HasIndex("IdEquipe");

                    b.HasIndex("IdPartidaEquipe");

                    b.ToTable("equipeEmPartida", (string)null);
                });

            modelBuilder.Entity("Campeonato.Models.Jogador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__jogador__3213E83F92D79C85");

                    b.ToTable("jogador", (string)null);
                });

            modelBuilder.Entity("Campeonato.Models.JogadorEmEquipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEquipe")
                        .HasColumnType("int")
                        .HasColumnName("idEquipe");

                    b.Property<int>("IdJogador")
                        .HasColumnType("int")
                        .HasColumnName("idJogador");

                    b.HasKey("Id")
                        .HasName("PK__jogadorE__3213E83FE24FA27D");

                    b.HasIndex("IdEquipe");

                    b.HasIndex("IdJogador");

                    b.ToTable("jogadorEmEquipe", (string)null);
                });

            modelBuilder.Entity("Campeonato.Models.JogadorEmPartidaIndividual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdJogador")
                        .HasColumnType("int")
                        .HasColumnName("idJogador");

                    b.Property<int>("IdPartidaIndividual")
                        .HasColumnType("int")
                        .HasColumnName("idPartidaIndividual");

                    b.HasKey("Id")
                        .HasName("PK__jogadorE__3213E83F196E9A10");

                    b.HasIndex("IdJogador");

                    b.HasIndex("IdPartidaIndividual");

                    b.ToTable("jogadorEmPartidaIndividual", (string)null);
                });

            modelBuilder.Entity("Campeonato.Models.Modalidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Individual")
                        .HasColumnType("bit")
                        .HasColumnName("individual");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__modalida__3213E83F4F9B1FF7");

                    b.ToTable("modalidade", (string)null);
                });

            modelBuilder.Entity("Campeonato.Models.PartidaEquipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdEquipeVencedora")
                        .HasColumnType("int")
                        .HasColumnName("idEquipeVencedora");

                    b.Property<int>("IdModalidade")
                        .HasColumnType("int")
                        .HasColumnName("idModalidade");

                    b.Property<int?>("PosChaveamento")
                        .HasColumnType("int")
                        .HasColumnName("posChaveamento");

                    b.HasKey("Id")
                        .HasName("PK__partidaE__3213E83FC3ADBD29");

                    b.HasIndex("IdEquipeVencedora");

                    b.HasIndex("IdModalidade");

                    b.ToTable("partidaEquipe", (string)null);
                });

            modelBuilder.Entity("Campeonato.Models.PartidaIndividual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdJogadorVencedor")
                        .HasColumnType("int")
                        .HasColumnName("idJogadorVencedor");

                    b.Property<int>("IdModalidade")
                        .HasColumnType("int")
                        .HasColumnName("idModalidade");

                    b.Property<int?>("PosChaveamento")
                        .HasColumnType("int")
                        .HasColumnName("posChaveamento");

                    b.HasKey("Id")
                        .HasName("PK__partidaI__3213E83FF0C02494");

                    b.HasIndex("IdJogadorVencedor");

                    b.HasIndex("IdModalidade");

                    b.ToTable("partidaIndividual", (string)null);
                });

            modelBuilder.Entity("Campeonato.Models.PontosCampeonato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdEquipe")
                        .HasColumnType("int")
                        .HasColumnName("idEquipe");

                    b.Property<int?>("IdJogador")
                        .HasColumnType("int")
                        .HasColumnName("idJogador");

                    b.Property<int>("IdModalidade")
                        .HasColumnType("int")
                        .HasColumnName("idModalidade");

                    b.Property<int>("Pontos")
                        .HasColumnType("int")
                        .HasColumnName("pontos");

                    b.HasKey("Id")
                        .HasName("PK__pontosCa__3213E83FDCC90CD7");

                    b.HasIndex("IdEquipe");

                    b.HasIndex("IdJogador");

                    b.HasIndex("IdModalidade");

                    b.ToTable("pontosCampeonato", (string)null);
                });

            modelBuilder.Entity("Campeonato.Models.PontosPartidaEmEquipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEquipe")
                        .HasColumnType("int")
                        .HasColumnName("idEquipe");

                    b.Property<int>("IdPartidaEmEquipe")
                        .HasColumnType("int")
                        .HasColumnName("idPartidaEmEquipe");

                    b.Property<int>("Pontos")
                        .HasColumnType("int")
                        .HasColumnName("pontos");

                    b.HasKey("Id")
                        .HasName("PK__pontosPa__3213E83F3CB118B7");

                    b.HasIndex("IdEquipe");

                    b.HasIndex("IdPartidaEmEquipe");

                    b.ToTable("pontosPartidaEmEquipe", (string)null);
                });

            modelBuilder.Entity("Campeonato.Models.PontosPartidaIndividual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdJogador")
                        .HasColumnType("int")
                        .HasColumnName("idJogador");

                    b.Property<int>("IdPartidaIndividual")
                        .HasColumnType("int")
                        .HasColumnName("idPartidaIndividual");

                    b.Property<int>("Pontos")
                        .HasColumnType("int")
                        .HasColumnName("pontos");

                    b.HasKey("Id")
                        .HasName("PK__pontosPa__3213E83FE2A2ECEA");

                    b.HasIndex("IdJogador");

                    b.HasIndex("IdPartidaIndividual");

                    b.ToTable("pontosPartidaIndividual", (string)null);
                });

            modelBuilder.Entity("Campeonato.Models.RegistroModalidadeEquipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEquipe")
                        .HasColumnType("int")
                        .HasColumnName("idEquipe");

                    b.Property<int>("IdModalidade")
                        .HasColumnType("int")
                        .HasColumnName("idModalidade");

                    b.HasKey("Id")
                        .HasName("PK__registro__3213E83FE25CF5B8");

                    b.HasIndex("IdEquipe");

                    b.HasIndex("IdModalidade");

                    b.ToTable("registroModalidadeEquipe", (string)null);
                });

            modelBuilder.Entity("Campeonato.Models.RegistroModalidadeIndividual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdJogador")
                        .HasColumnType("int")
                        .HasColumnName("idJogador");

                    b.Property<int>("IdModalidade")
                        .HasColumnType("int")
                        .HasColumnName("idModalidade");

                    b.HasKey("Id")
                        .HasName("PK__registro__3213E83FE4FBF529");

                    b.HasIndex("IdJogador");

                    b.HasIndex("IdModalidade");

                    b.ToTable("registroModalidadeIndividual", (string)null);
                });

            modelBuilder.Entity("Campeonato.Models.Tournment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__tournmen__3213E83FA96361DC");

                    b.ToTable("tournment", (string)null);
                });

            modelBuilder.Entity("Campeonato.Models.EquipeEmPartidum", b =>
                {
                    b.HasOne("Campeonato.Models.Equipe", "IdEquipeNavigation")
                        .WithMany("EquipeEmPartida")
                        .HasForeignKey("IdEquipe")
                        .IsRequired()
                        .HasConstraintName("fk_equipeEmPartida_idEquipe");

                    b.HasOne("Campeonato.Models.PartidaEquipe", "IdPartidaEquipeNavigation")
                        .WithMany("EquipeEmPartida")
                        .HasForeignKey("IdPartidaEquipe")
                        .IsRequired()
                        .HasConstraintName("fk_equipeEmPartida_idPartidaEquipe");

                    b.Navigation("IdEquipeNavigation");

                    b.Navigation("IdPartidaEquipeNavigation");
                });

            modelBuilder.Entity("Campeonato.Models.JogadorEmEquipe", b =>
                {
                    b.HasOne("Campeonato.Models.Equipe", "IdEquipeNavigation")
                        .WithMany("JogadorEmEquipes")
                        .HasForeignKey("IdEquipe")
                        .IsRequired()
                        .HasConstraintName("fk_jogadorEmEquipe_idEquipe");

                    b.HasOne("Campeonato.Models.Jogador", "IdJogadorNavigation")
                        .WithMany("JogadorEmEquipes")
                        .HasForeignKey("IdJogador")
                        .IsRequired()
                        .HasConstraintName("fk_jogadorEmEquipe_idJogador");

                    b.Navigation("IdEquipeNavigation");

                    b.Navigation("IdJogadorNavigation");
                });

            modelBuilder.Entity("Campeonato.Models.JogadorEmPartidaIndividual", b =>
                {
                    b.HasOne("Campeonato.Models.Jogador", "IdJogadorNavigation")
                        .WithMany("JogadorEmPartidaIndividuals")
                        .HasForeignKey("IdJogador")
                        .IsRequired()
                        .HasConstraintName("fk_jogadorEmPartidaIndividual_idJogador");

                    b.HasOne("Campeonato.Models.PartidaIndividual", "IdPartidaIndividualNavigation")
                        .WithMany("JogadorEmPartidaIndividuals")
                        .HasForeignKey("IdPartidaIndividual")
                        .IsRequired()
                        .HasConstraintName("fk_jogadorEmPartidaIndividual_idPartidaIndividual");

                    b.Navigation("IdJogadorNavigation");

                    b.Navigation("IdPartidaIndividualNavigation");
                });

            modelBuilder.Entity("Campeonato.Models.PartidaEquipe", b =>
                {
                    b.HasOne("Campeonato.Models.Equipe", "IdEquipeVencedoraNavigation")
                        .WithMany("PartidaEquipes")
                        .HasForeignKey("IdEquipeVencedora")
                        .HasConstraintName("fk_partidaEquipe_idEquipeVencedora");

                    b.HasOne("Campeonato.Models.Modalidade", "IdModalidadeNavigation")
                        .WithMany("PartidaEquipes")
                        .HasForeignKey("IdModalidade")
                        .IsRequired()
                        .HasConstraintName("fk_partidaEquipe_idModalidade");

                    b.Navigation("IdEquipeVencedoraNavigation");

                    b.Navigation("IdModalidadeNavigation");
                });

            modelBuilder.Entity("Campeonato.Models.PartidaIndividual", b =>
                {
                    b.HasOne("Campeonato.Models.Jogador", "IdJogadorVencedorNavigation")
                        .WithMany("PartidaIndividuals")
                        .HasForeignKey("IdJogadorVencedor")
                        .HasConstraintName("fk_partidaIndividual_idJogadorVencedor");

                    b.HasOne("Campeonato.Models.Modalidade", "IdModalidadeNavigation")
                        .WithMany("PartidaIndividuals")
                        .HasForeignKey("IdModalidade")
                        .IsRequired()
                        .HasConstraintName("fk_partidaIndividual_idModalidade");

                    b.Navigation("IdJogadorVencedorNavigation");

                    b.Navigation("IdModalidadeNavigation");
                });

            modelBuilder.Entity("Campeonato.Models.PontosCampeonato", b =>
                {
                    b.HasOne("Campeonato.Models.Equipe", "IdEquipeNavigation")
                        .WithMany("PontosCampeonatos")
                        .HasForeignKey("IdEquipe")
                        .HasConstraintName("fk_pontosCampeonato_idEquipe");

                    b.HasOne("Campeonato.Models.Jogador", "IdJogadorNavigation")
                        .WithMany("PontosCampeonatos")
                        .HasForeignKey("IdJogador")
                        .HasConstraintName("fk_pontosCampeonato_idJogador");

                    b.HasOne("Campeonato.Models.Modalidade", "IdModalidadeNavigation")
                        .WithMany("PontosCampeonatos")
                        .HasForeignKey("IdModalidade")
                        .IsRequired()
                        .HasConstraintName("fk_pontosCampeonato_idModalidade");

                    b.Navigation("IdEquipeNavigation");

                    b.Navigation("IdJogadorNavigation");

                    b.Navigation("IdModalidadeNavigation");
                });

            modelBuilder.Entity("Campeonato.Models.PontosPartidaEmEquipe", b =>
                {
                    b.HasOne("Campeonato.Models.Equipe", "IdEquipeNavigation")
                        .WithMany("PontosPartidaEmEquipes")
                        .HasForeignKey("IdEquipe")
                        .IsRequired()
                        .HasConstraintName("fk_pontosPartida_idEquipe");

                    b.HasOne("Campeonato.Models.PartidaEquipe", "IdPartidaEmEquipeNavigation")
                        .WithMany("PontosPartidaEmEquipes")
                        .HasForeignKey("IdPartidaEmEquipe")
                        .IsRequired()
                        .HasConstraintName("fk_pontosPartida_idPartidaEmEquipe");

                    b.Navigation("IdEquipeNavigation");

                    b.Navigation("IdPartidaEmEquipeNavigation");
                });

            modelBuilder.Entity("Campeonato.Models.PontosPartidaIndividual", b =>
                {
                    b.HasOne("Campeonato.Models.Jogador", "IdJogadorNavigation")
                        .WithMany("PontosPartidaIndividuals")
                        .HasForeignKey("IdJogador")
                        .IsRequired()
                        .HasConstraintName("fk_pontosPartida_idJogador");

                    b.HasOne("Campeonato.Models.PartidaIndividual", "IdPartidaIndividualNavigation")
                        .WithMany("PontosPartidaIndividuals")
                        .HasForeignKey("IdPartidaIndividual")
                        .IsRequired()
                        .HasConstraintName("fk_pontosPartida_idPartidaIndividual");

                    b.Navigation("IdJogadorNavigation");

                    b.Navigation("IdPartidaIndividualNavigation");
                });

            modelBuilder.Entity("Campeonato.Models.RegistroModalidadeEquipe", b =>
                {
                    b.HasOne("Campeonato.Models.Equipe", "IdEquipeNavigation")
                        .WithMany("RegistroModalidadeEquipes")
                        .HasForeignKey("IdEquipe")
                        .IsRequired()
                        .HasConstraintName("fk_registroModalidadeEquipe_idEquipe");

                    b.HasOne("Campeonato.Models.Modalidade", "IdModalidadeNavigation")
                        .WithMany("RegistroModalidadeEquipes")
                        .HasForeignKey("IdModalidade")
                        .IsRequired()
                        .HasConstraintName("fk_registroModalidadeEquipe_idModalidade");

                    b.Navigation("IdEquipeNavigation");

                    b.Navigation("IdModalidadeNavigation");
                });

            modelBuilder.Entity("Campeonato.Models.RegistroModalidadeIndividual", b =>
                {
                    b.HasOne("Campeonato.Models.Jogador", "IdJogadorNavigation")
                        .WithMany("RegistroModalidadeIndividuals")
                        .HasForeignKey("IdJogador")
                        .IsRequired()
                        .HasConstraintName("fk_registroModalidadeIndividual_idJogador");

                    b.HasOne("Campeonato.Models.Modalidade", "IdModalidadeNavigation")
                        .WithMany("RegistroModalidadeIndividuals")
                        .HasForeignKey("IdModalidade")
                        .IsRequired()
                        .HasConstraintName("fk_registroModalidadeIndividual_idModalidade");

                    b.Navigation("IdJogadorNavigation");

                    b.Navigation("IdModalidadeNavigation");
                });

            modelBuilder.Entity("Campeonato.Models.Equipe", b =>
                {
                    b.Navigation("EquipeEmPartida");

                    b.Navigation("JogadorEmEquipes");

                    b.Navigation("PartidaEquipes");

                    b.Navigation("PontosCampeonatos");

                    b.Navigation("PontosPartidaEmEquipes");

                    b.Navigation("RegistroModalidadeEquipes");
                });

            modelBuilder.Entity("Campeonato.Models.Jogador", b =>
                {
                    b.Navigation("JogadorEmEquipes");

                    b.Navigation("JogadorEmPartidaIndividuals");

                    b.Navigation("PartidaIndividuals");

                    b.Navigation("PontosCampeonatos");

                    b.Navigation("PontosPartidaIndividuals");

                    b.Navigation("RegistroModalidadeIndividuals");
                });

            modelBuilder.Entity("Campeonato.Models.Modalidade", b =>
                {
                    b.Navigation("PartidaEquipes");

                    b.Navigation("PartidaIndividuals");

                    b.Navigation("PontosCampeonatos");

                    b.Navigation("RegistroModalidadeEquipes");

                    b.Navigation("RegistroModalidadeIndividuals");
                });

            modelBuilder.Entity("Campeonato.Models.PartidaEquipe", b =>
                {
                    b.Navigation("EquipeEmPartida");

                    b.Navigation("PontosPartidaEmEquipes");
                });

            modelBuilder.Entity("Campeonato.Models.PartidaIndividual", b =>
                {
                    b.Navigation("JogadorEmPartidaIndividuals");

                    b.Navigation("PontosPartidaIndividuals");
                });
#pragma warning restore 612, 618
        }
    }
}
